{"ast":null,"code":"var _jsxFileName = \"C:\\\\Team3\\\\CEOpage\\\\client\\\\src\\\\pages\\\\Management.js\";\nimport React, { Component } from 'react';\nimport TicketListTable from 'components/TicketListTable';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { CircularProgress } from '@material-ui/core';\n\nclass Management extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stateRefresh = () => {\n      this.setState({\n        ticketings: '',\n        completed: 0,\n        searchKeyword: ''\n      });\n      this.callApi().then(res => this.setState({\n        ticketing: res\n      })).catch(err => console.log(err));\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/ticketings');\n      const body = await response.json();\n      return body;\n    };\n\n    this.progress = () => {\n      const completed = this.state.completed;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 1\n      });\n    };\n\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n\n    this.state = {\n      ticketings: '',\n      completed: 0,\n      searchKeyword: ''\n    };\n    this.stateRefresh = this.stateRefresh.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi().then(res => this.setState({\n      ticketings: res\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const filteredComponents = data => {\n      // data = data.filter((c) => {\n      //   return c.phone.indexOf(this.state.searchKeyword) > -1;\n      // });\n      return data.map(c => {\n        return React.createElement(TicketListTable, {\n          stateRefresh: this.stateRefresh,\n          ticketing_id: c.ticketing_id,\n          user_id: c.user_id,\n          show_id: c.show_id,\n          show_date_id: c.show_date_id,\n          tiketing_date: c.ticketing_date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n    };\n\n    const cellList = [\"선택\", \"이름\", \"ID\", \"상영작\", \"시간대\", \"좌석번호\", \"예매일자\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, cellList.map(c => {\n      return React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, c);\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.ticketings, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      colSpan: \"7\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      variant: \"determinate\",\n      value: this.state.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Management;","map":{"version":3,"sources":["C:/Team3/CEOpage/client/src/pages/Management.js"],"names":["React","Component","TicketListTable","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","Management","constructor","props","stateRefresh","setState","ticketings","completed","searchKeyword","callApi","then","res","ticketing","catch","err","console","log","response","fetch","body","json","progress","state","handleValueChange","e","nextState","target","name","value","bind","componentDidMount","timer","setInterval","render","filteredComponents","data","map","c","ticketing_id","user_id","show_id","show_date_id","ticketing_date","cellList"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\r\nimport TicketListTable from 'components/TicketListTable';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\nclass Management extends Component{\r\n        constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          ticketings:'',\r\n          completed:0,\r\n          searchKeyword:''\r\n        }\r\n        this.stateRefresh = this.stateRefresh.bind(this);\r\n      }\r\n    \r\n      stateRefresh = () => {\r\n        this.setState({\r\n          ticketings:'',\r\n          completed:0,\r\n          searchKeyword:''\r\n      });\r\n        this.callApi()\r\n        .then(res => this.setState({ticketing: res}))\r\n        .catch(err => console.log(err));\r\n      }\r\n    \r\n      componentDidMount(){\r\n        this.timer = setInterval(this.progress, 20);\r\n        this.callApi()\r\n        .then(res => this.setState({ticketings: res}))\r\n        .catch(err => console.log(err));\r\n      }\r\n    \r\n      callApi = async() => {\r\n        const response = await fetch('/api/ticketings');\r\n        const body = await response.json();\r\n        return body;\r\n      }\r\n    \r\n      progress = () => {\r\n        const {completed} = this.state;\r\n        this.setState({completed: completed >= 100 ? 0 : completed +1});\r\n      };\r\n    \r\n      handleValueChange =(e) =>{\r\n        let nextState = {}\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n      }\r\n    \r\n      render(){\r\n        const filteredComponents = (data) =>{\r\n          // data = data.filter((c) => {\r\n          //   return c.phone.indexOf(this.state.searchKeyword) > -1;\r\n          // });\r\n          return data.map((c) => {\r\n            return <TicketListTable stateRefresh={this.stateRefresh} ticketing_id={c.ticketing_id} user_id ={c.user_id} show_id={c.show_id} show_date_id={c.show_date_id} tiketing_date={c.ticketing_date}/>\r\n          })\r\n        }\r\n        const cellList = [\"선택\", \"이름\", \"ID\", \"상영작\", \"시간대\", \"좌석번호\", \"예매일자\"]\r\n\r\n    \r\n    return (\r\n        <div>\r\n\r\n            <Table >\r\n            <TableHead>\r\n              <TableRow>\r\n                {cellList.map(c => {\r\n                  return <TableCell>{c}</TableCell>\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.ticketings }\r\n              {/* {this.state.ticketings ? filteredComponents(this.state.ticketings) :*/}\r\n              <TableRow>\r\n                <TableCell colSpan=\"7\" align =\"center\">\r\n                  <CircularProgress  variant=\"determinate\" value={this.state.completed}/>\r\n                </TableCell>\r\n              </TableRow>\r\n              \r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n    );\r\n};\r\n}\r\n\r\nexport default Management;\r\n"]},"metadata":{},"sourceType":"module"}